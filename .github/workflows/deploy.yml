name: deploy

on:
  push:
    branches: ["master"]
  pull_request:
    types:
      - closed
    branches: [ "master" ]

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        - name: Login
          run: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        - name: Build and Publish
          run: |
            docker build . --tag ${{ env.DOCKER_TAG }}
            docker push ${{ env.DOCKER_TAG }}

    deploy:
        name: Deploy
        needs: build
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Получаем всю историю коммитов
            
        - name: Install SSH keys
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
            
        - name: Validate key
          run: ssh -T -v ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} || true
            
        - name: Prepare deployment package
          run: |
            # Создаем архив со всем проектом
            tar -czf deploy.tar.gz .
            
        - name: Transfer files to server
          run: |
            scp deploy.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/deploy.tar.gz
            ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
              mkdir -p ~/deploy &&
              tar -xzf ~/deploy.tar.gz -C ~/deploy &&
              rm ~/deploy.tar.gz
            "
            
        - name: Deploy application
          run: |
            ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
              cd ~/deploy &&
              docker-compose pull &&
              docker-compose build --no-cache &&
              docker-compose up -d
            "
            
        - name: Cleanup
          if: always()
          run: |
            rm -rf ~/.ssh deploy.tar.gz
            ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm -f ~/deploy.tar.gz" || true
