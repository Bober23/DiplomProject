name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract repository name
        id: repo
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV  # lowercased

      - name: Build and Push Images
        run: |
          docker build -t ghcr.io/${{ env.REPO }}/service_api:latest -f DiplomProject.Backend.Api/Dockerfile .
          docker build -t ghcr.io/${{ env.REPO }}/service_image:latest -f DiplomProject.Backend.ImageProcessingService/Dockerfile .
          docker build -t ghcr.io/${{ env.REPO }}/service_doc:latest -f DiplomProject.Backend.DocumentProcessingService/Dockerfile .
          docker build -t ghcr.io/${{ env.REPO }}/client:latest -f DiplomProject.Front/front/Dockerfile ./DiplomProject.Front/front

          docker push ghcr.io/${{ env.REPO }}/service_api:latest
          docker push ghcr.io/${{ env.REPO }}/service_image:latest
          docker push ghcr.io/${{ env.REPO }}/service_doc:latest
          docker push ghcr.io/${{ env.REPO }}/client:latest
  deploy:
      name: Deploy to Server
      needs: build-and-push
      runs-on: ubuntu-latest
  
      steps:

        # Шаг 1: Проверяем, что у нас есть доступ к серверу
        - name: Checkout repository
          uses: actions/checkout@v2
  
        # Шаг 2: Получаем секреты для доступа к серверу
        - name: Set up SSH key
          uses: webfactory/ssh-agent@v0.5.3
          with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  
        # Шаг 3: Копируем файлы на сервер (если нужно обновить настройки)
        - name: Copy files to the server (if necessary)
          run: |
            scp -r . root@${{ secrets.SSH_HOST }}:/home/diplom
  
        # Шаг 4: Вытягиваем образы из реестра
        - name: Pull Docker images from GitHub Container Registry
          run: |
            ssh root@${{ secrets.SSH_HOST }} << 'EOF'
              docker-compose pull
            EOF
  
        # Шаг 5: Запускаем контейнеры
        - name: Start Docker containers
          run: |
            ssh root@${{ secrets.SSH_HOST }} << 'EOF'
              docker-compose up -d
            EOF
  
        # Шаг 6: Проверка статуса контейнеров (по желанию)
        - name: Check container status
          run: |
            ssh root@${{ secrets.SSH_HOST }} << 'EOF'
              docker ps
            EOF
