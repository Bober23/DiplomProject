name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract repository name
        id: repo
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV  # lowercased

      - name: Build and Push Images
        run: |
          docker build -t ghcr.io/${{ env.REPO }}/service_api:latest -f DiplomProject.Backend.Api/Dockerfile .
          docker build -t ghcr.io/${{ env.REPO }}/service_image:latest -f DiplomProject.Backend.ImageProcessingService/Dockerfile .
          docker build -t ghcr.io/${{ env.REPO }}/service_doc:latest -f DiplomProject.Backend.DocumentProcessingService/Dockerfile .
          docker build -t ghcr.io/${{ env.REPO }}/client:latest -f DiplomProject.Front/front/Dockerfile ./DiplomProject.Front/front

          docker push ghcr.io/${{ env.REPO }}/service_api:latest
          docker push ghcr.io/${{ env.REPO }}/service_image:latest
          docker push ghcr.io/${{ env.REPO }}/service_doc:latest
          docker push ghcr.io/${{ env.REPO }}/client:latest
  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy docker-compose file to server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/diplom/docker-compose.yml

      - name: Deploy via SSH
        # Используем опцию -T для отключения выделения псевдотерминала
        run: |
          ssh -T -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/diplom
            # Загружаем образы с реестра и запускаем контейнеры
            docker compose pull
            docker compose up -d
          EOF
